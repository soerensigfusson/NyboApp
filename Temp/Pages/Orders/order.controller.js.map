{"version":3,"sources":["order.controller.js"],"names":["orderController","$inject","angular","module","controller","timelist","i","minutes","toString","padStart","hour","Math","floor","push","title","$q","$scope","$state","$http","$stateParams","Orders","Auth","Users","orders","addrSearch","currentNavItem","addressParts","partIndex","materials","currentUser","$getAuth","getMaterials","forEach","order","material","indexOf","name","materialSearch","query","results","filter","createFilterFor","lowercaseQuery","lowercase","filterFn","selectAddress","length","selectedItem","adresse","address","text","querySearch","txt","addressPart","request","url","method","params","q","deferred","defer","then","response","resolve","data","promise","id","$loaded","x","$getRecord","startdate","Date","enddate","saveOrder","$id","undefined","$add","go","$save","deleteOrder","$remove","newmaterial","amount","addMaterial","materialSearchText","deleteMaterial","index","splice","newtimereg","date","time","description","addTimereg","user","uid","timeregistrations","deleteTimereg","getUsername","find","onFileUploaded","snapshot","thumbnaildata","files","downloadUrl","thumbnail","console","log"],"mappings":"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","file":"order.controller.js","sourcesContent":["(function() {\n    orderController.$inject = [\"$q\", \"$scope\", \"$state\", \"$http\", \"$stateParams\", \"Orders\", \"Auth\", \"Users\"];\n    angular.module('App')\n        .controller('OrderController', orderController);\n\n    var timelist = [];\n\n    for (let i = 0; i < 48; i++) {\n        let minutes = ((i % 2) * 30).toString().padStart(2, '0');\n        let hour = Math.floor(i / 2).toString().padStart(2, '0');\n        timelist.push({title: hour + ':' + minutes, minutes: i * 30});\n    }\n\n    function /*@ngInject*/ orderController($q, $scope, $state, $http, $stateParams, Orders, Auth, Users) {\n        $scope.orders = Orders;\n        $scope.timelist = timelist;\n        $scope.addrSearch = {};\n        $scope.currentNavItem = 'details';\n\n        const addressParts = ['vejnavne', 'adgangsadresser', 'adresser'];\n        let partIndex = 0;\n        let materials = [];\n        let currentUser = Auth.$getAuth();\n\n        function getMaterials() {\n            $scope.orders.forEach(function(order) {\n                order.materials.forEach(function(material) {\n                    if (materials.indexOf(material.name) === -1) {\n                        materials.push(material.name);\n                    }\n                });\n            });\n        }\n\n        $scope.materialSearch = function(query) {\n            var results = query ? materials.filter(createFilterFor(query)) : materials;\n            return results;\n        };\n\n        function createFilterFor(query) {\n            var lowercaseQuery = angular.lowercase(query);\n\n            return function filterFn(material) {\n                return (material.indexOf(lowercaseQuery) === 0);\n            };\n        }\n\n        $scope.selectAddress = function() {\n            partIndex = partIndex == addressParts.length - 1 ? 0 : partIndex + 1;\n\n            if ($scope.addrSearch.selectedItem.adresse) {\n                $scope.orders.address = $scope.addrSearch.selectedItem.text;\n            }\n        };\n\n        $scope.querySearch = function(txt) {\n            let addressPart = addressParts[partIndex];\n\n            var request = {\n                url: 'http://dawa.aws.dk/' + addressPart + '/autocomplete',\n                method: 'GET',\n                params: {\n                    q: txt\n                }\n            };\n\n            var deferred = $q.defer();\n            $http(request).then(function(response) {\n                deferred.resolve(response.data);\n            });\n\n            return deferred.promise;\n\n        };\n\n        if ($stateParams.id) {\n            Orders.$loaded()\n                .then(function(x) {\n                    getMaterials();\n                    $scope.order = Orders.$getRecord($stateParams.id); // record with $id === \"foo\" or null;\n\n                    if ($scope.order.startdate) {\n                        $scope.order.startdate = new Date($scope.order.startdate);\n                    }\n                    if ($scope.order.enddate) {\n                        $scope.order.enddate = new Date($scope.order.enddate);\n                    }\n\n                });\n\n        } else {\n            $scope.order = {};\n        }\n\n        $scope.saveOrder = function() {\n            // prepare data\n            if ($scope.order.startdate && typeof $scope.order.startdate !== 'string') {\n                $scope.order.startdate = $scope.order.startdate.toString();\n            }\n            if ($scope.order.enddate && typeof $scope.order.enddate !== 'string') {\n                $scope.order.enddate = $scope.order.enddate.toString();\n            }\n\n            if ($scope.order.$id === undefined) {\n                Orders.$add($scope.order);\n                $state.go('^.list');\n            } else {\n                Orders.$save($scope.order);\n                $state.go('^.order', {id: $scope.order.$id});\n            }\n        };\n\n        $scope.deleteOrder = function() {\n            Orders.$remove($scope.order);\n            $state.go('^.list');\n        };\n\n        $scope.newmaterial = {\n            name: '',\n            amount: 0\n        };\n\n        $scope.addMaterial = function() {\n            $scope.newmaterial.name = $scope.newmaterial.name || $scope.newmaterial.materialSearchText;\n            delete $scope.newmaterial.materialSearchText;\n\n            if (!$scope.newmaterial.name || $scope.newmaterial.amount <= 0) {\n                return;\n            }\n\n            if (!$scope.order.materials) {\n                $scope.order.materials = [];\n            }\n\n            $scope.order.materials.push($scope.newmaterial);\n            Orders.$save($scope.order).then(function() {\n                $scope.newmaterial = {};\n            });\n        };\n\n        $scope.deleteMaterial = function(index) {\n            $scope.order.materials.splice(index, 1);\n            Orders.$save($scope.order);\n        };\n\n        $scope.newtimereg = {\n            date: new Date(),\n            time: 60,\n            description: ''\n\n        };\n\n        $scope.addTimereg = function() {\n\n            if ($scope.newtimereg.time <= 0) {\n                return;\n            }\n\n            $scope.newtimereg.user = currentUser.uid;\n\n            if (!$scope.order.timeregistrations) {\n                $scope.order.timeregistrations = [];\n            }\n\n            if ($scope.newtimereg.date && typeof $scope.newtimereg.date !== 'string') {\n                $scope.newtimereg.date = $scope.newtimereg.date.toString();\n            }\n\n            $scope.order.timeregistrations.push($scope.newtimereg);\n            Orders.$save($scope.order).then(function() {\n                $scope.newtimereg = {\n                    date: new Date(),\n                    time: 0,\n                    description: ''\n                };\n            });\n        };\n\n        $scope.deleteTimereg = function(index) {\n            $scope.order.timeregistrations.splice(index, 1);\n            Orders.$save($scope.order);\n        };\n\n        $scope.getUsername = function(uid) {\n            let user = Users.find(user => user.uid === uid);\n\n            return user ? user.name : '----';\n        }\n\n        $scope.onFileUploaded = function(snapshot, thumbnaildata){\n            if (!$scope.order.files) {\n                $scope.order.files = [];\n            }\n\n            $scope.order.files.push({\n                url: snapshot.downloadUrl,\n                thumbnail: thumbnaildata\n            })\n\n          console.log(snapshot, thumbnaildata);\n        }\n\n    }\n\n})();\n"]}